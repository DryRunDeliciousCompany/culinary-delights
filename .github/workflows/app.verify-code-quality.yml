name: "[app] Verify code quality"

on:
  workflow_run:
    workflows: ["* Test"]
    types: [requested]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  scan-secrets:
    name: "Scan secrets"
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Scan secrets
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}}
          # GITLEAKS_CONFIG: .gitleaks.toml
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: false
          GITLEAKS_ENABLE_SUMMARY: true

  scan-vuln:
    name: "Scan vulnerability"
    runs-on: "ubuntu-20.04"
    permissions:
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  notify:
    name: "Slack notify"
    needs:
      - scan-secrets
      - scan-vuln
    if: failure()
    runs-on: "ubuntu-20.04"
    steps:
      # Send slack message
      - name: Send slack message
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "danger",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*Test ERROR* \n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK