name: "[infra] Preview & Deploy"

on:
  push:
    branches:
      - "master"
    paths:
      - "10_infra/**"
  workflow_dispatch:

env:
  WORKING_DIRECTORY: "10_infra"
  AWS_REGION: ap-northeast-1
  TF_VERSION: 1.2.8
  TF_PROJECT: tastylog
  TF_ENVIRONMENT: dev

defaults:
  run:
    shell: bash
    working-directory: "10_infra"

permissions:
  id-token: write
  contents: read

jobs:
  preview:
    name: Preview
    runs-on: ubuntu-latest
    outputs:
      TF_PLAN_OUTCOME: ${{ steps.plan.outcome }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        # if: github.event_name == 'pull_request'
        continue-on-error: true
        shell: bash +e {0}
        run: |
          terraform plan \
            -var="project=${{ env.TF_PROJECT}}" \
            -var="environment=${{ env.TF_ENVIRONMENT}}" \
            -var="username=${{ secrets.MYSQL_USERNAME }}" \
            -var="password=${{ secrets.MYSQL_PASSWORD }}" \
            -detailed-exitcode \
            -input=false; RES=$?;
          echo "exit code is $RES"
          echo "::set-output name=exitcode::$RES"

      # Send slack message
      - name: Send slack message
        if: ${{ steps.plan.outcome == 'failure' }}
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "danger",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*Terraform Require Review* \n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: 
      - preview
    if: needs.preview.outputs.TF_PLAN_OUTCOME == 'failure'
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        id: apply
        # if: github.event_name == 'pull_request'
        run: |
          terraform apply \
            -var="project=${{ env.TF_PROJECT}}" \
            -var="environment=${{ env.TF_ENVIRONMENT}}" \
            -var="username=${{ secrets.MYSQL_USERNAME }}" \
            -var="password=${{ secrets.MYSQL_PASSWORD }}" \
            -auto-approve \
            -input=false
